# Copyright 2017, Google, Inc.
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# See:
#
#  https://circleci.com/docs/configuration/
#  https://circleci.com/docs/install-and-use-yarn/

machine:
  node:
    version: 6.10.2
  services:
    - redis
    - memcached

# Use for broader build-related configuration
general:
  branches:
    ignore:
      - gh-pages

# Install your project's language-specific dependencies
dependencies:
  pre:
    - yarn global add nyc codecov @google-cloud/nodejs-repo-tools
  override:
    - yarn install
  post:
    - echo $KEYFILE > /home/ubuntu/nodejs-docs-samples/key.json
    - gcloud auth activate-service-account --key-file /home/ubuntu/nodejs-docs-samples/key.json || true
  cache_directories:
    - ~/.cache/yarn
    - appengine/analytics/node_modules
    - appengine/cloudsql/node_modules
    - appengine/datastore/node_modules
    - appengine/endpoints/node_modules
    - appengine/errorreporting/node_modules
    - appengine/grunt/node_modules
    - appengine/hello-world/node_modules
    - appengine/loopback/node_modules
    - appengine/mailjet/node_modules
    - appengine/memcached/node_modules
    - appengine/mongodb/node_modules
    - appengine/parse-server/node_modules
    - appengine/pubsub/node_modules
    - appengine/redis/node_modules
    - appengine/sendgrid/node_modules
    - appengine/static-files/node_modules
    - appengine/storage/node_modules
    - appengine/twilio/node_modules
    - appengine/websockets/node_modules

# Run your tests
test:
  override:
    # - yarn run lint
    # - yarn run cover
    - samples test build -l=kms --async
    - samples test build -l=language --async
    - samples test build -l=language/slackbot --async
    - samples test build -l=monitoring --async
    - samples test build -l=prediction --async
    - samples test build -l=pubsub --async
    - samples test build -l=resource --async
    - samples test build -l=spanner --async
    - samples test build -l=speech --async
    - samples test build -l=storage --async
    - samples test build -l=translate --async
    # This build times out. Does video need more than 10 minutes?
    # - samples test build -l=video --async
  post:
    - nyc report --reporter=lcov > coverage.lcov && codecov || true
